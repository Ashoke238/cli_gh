name: Run CLI for Repo Automation

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Repository Name'
        required: true
      accuracy_train:
        description: 'Accuracy Threshold for Training'
        required: true
        default: '0.85'
      accuracy_inference:
        description: 'Accuracy Threshold for Inference'
        required: true
        default: '0.80'

jobs:
  run-cli:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.inputs.repo_name }}
      ACCURACY_TRAIN: ${{ github.event.inputs.accuracy_train }}
      ACCURACY_INFERENCE: ${{ github.event.inputs.accuracy_inference }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      DATABRICS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}
      MLFLOW_USER_EMAIL: ${{ secrets.MLFLOW_USER_EMAIL }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set PYTHONPATH for relative imports
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Print environment (DEBUG)
      run: |
          echo "GH_TOKEN=$GH_TOKEN"
          echo "DATABRICKS_HOST=$DATABRICKS_HOST"
          echo "DATABRICKS_USERNAME=$DATABRICKS_USERNAME"
          echo "MLFLOW_USER_EMAIL=$MLFLOW_USER_EMAIL"
      env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}
          MLFLOW_USER_EMAIL: ${{ secrets.DATABRICKS_USERNAME }}

    - name: Run CLI tool
      run: |
        source venv/bin/activate
        python cli/main.py
      env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}
          MLFLOW_USER_EMAIL: ${{ secrets.DATABRICKS_USERNAME }}

  run-e2e-validation:
    runs-on: ubuntu-latest
    needs: run-cli
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run E2E Validator
        run: |
          source venv/bin/activate
          python e2e/run_e2e.py "${{ github.event.inputs.repo_name }}"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}
          MLFLOW_USER_EMAIL: ${{ secrets.MLFLOW_USER_EMAIL }}

      - name: Push HTML Report to e2e_reports repo
        run: |
            git config --global user.email "gh-actions@users.noreply.github.com"
            git config --global user.name "GitHub Actions"
        
            git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Ashoke238/e2e_reports.git
            cd e2e_reports
        
            mkdir -p reports
        
            REPORT_FILENAME=$(basename "$E2E_REPORT_PATH")
            REPORT_FOLDER=$(basename "$(dirname "$E2E_REPORT_PATH")")
            DEST_FOLDER="reports/${REPORT_FOLDER}"
        
            mkdir -p "$DEST_FOLDER"
            cp "../$E2E_REPORT_PATH" "$DEST_FOLDER/"
        
            # Append to index.html if not already present
            RELATIVE_PATH="${DEST_FOLDER}/${REPORT_FILENAME}"
            if ! grep -q "$RELATIVE_PATH" index.html; then
              sed -i "/<ul>/a \ \ <li><a href=\"$RELATIVE_PATH\">$RELATIVE_PATH</a></li>" index.html
            fi
        
            git add "$DEST_FOLDER/$REPORT_FILENAME" index.html
            git commit -m "✅ E2E report for ${{ github.event.inputs.repo_name }} - $(date +'%Y-%m-%d %H:%M:%S')" || echo "⚠️ Nothing to commit"
            git push